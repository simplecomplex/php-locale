; HELP
; ------------------------------------------------------------------------------
; Character set, newline and editors:
; - character set: UTF-8
; - newline: \n, carriage return \r is illegal
; - editors: don't use ™MS ™Windows ™Notepad, use ™Notepad++
; Sections:
; - configuration must start with a [section]
; - a section is not allowed to be empty; have no children
; Names:
; - must consist of letters (lower, upper), digits, hyphen and underscore
; Quotes:
; - only required then leading or trailing space
; - use double quotes, not single
; Values are single-lined:
; - use \n (single backslash) to indicate newline
; Values become typed (to other than string):
; - null/NULL: null
; - true/false: boolean
; - 8: int
; - 0.8: float
; Comments:
; - line comment begins with semicolon
; - inline comment is not supported
; Example:
; [some_section]
; someFlatVar = some string
; someIndexedList[] = first
; someIndexedList[] = second
; someKeyedList[first] = primary
; someKeyedList[second] = secondary
; ------------------------------------------------------------------------------
[lib_simplecomplex_locale]
; Overall defaults.
localeDefault = en-us
languageDefault = en-us
; Short-to-long locale/language code.
codeShortToLong[en] = en-us
codeShortToLong[da] = da-dk
; Locales supported and their implementing classes.
localeToClass[en-us] = "\SimpleComplex\Locale\LocaleEnUs"
localeToClass[en-gb] = "\SimpleComplex\Locale\LocaleEnGb"
localeToClass[da-dk] = "\SimpleComplex\Locale\LocaleDaDk"
; Languages supported.
languages[] = en-us
languages[] = da-dk
; Map language from locale.
localeToLanguage[en-us] = en-us
localeToLanguage[en-gb] = en-us
localeToLanguage[da-dk] = da-dk
; Map locale from language.
languageToLocale[en-us] = en-us
languageToLocale[en-gb] = en-gb
languageToLocale[da-dk] = da-dk
